/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package simul.project;

import javax.swing.table.DefaultTableModel;
import static simul.project.SimulProject.STDIN_SCANNER;
import static simul.project.firstTable.a;
import static simul.project.secondtable.lt;


/**
 *
 * @author user
 */
public class thirdtable extends javax.swing.JFrame {

    /**
     * Creates new form thirdtable
     */
    public thirdtable() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        simulated = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        quantitynumbers = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        startQuantity = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        recorderpoint = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        randomnumber = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        randomnumberleadtime = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtarea = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        inventorytxt = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        placingoneorder = new javax.swing.JTextField();
        drillperyear = new javax.swing.JTextField();
        lostsale = new javax.swing.JTextField();
        dayswork = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "day", "recived", "Begining", "Random 1", "demand", "ending", "lost", "order", "random 2", "leadtime"
            }
        ));
        jScrollPane1.setViewportView(jTable3);

        simulated.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simulatedActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("enter quantity number ");

        jButton1.setText("Enventory table");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        quantitynumbers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantitynumbersActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("enter the number of days you want to be simulated ");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("enter the start quantity");

        startQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startQuantityActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("enter a rondom number");

        recorderpoint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recorderpointActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("enter reorder point ");

        randomnumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                randomnumberActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("enter the random number to lead time");

        randomnumberleadtime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                randomnumberleadtimeActionPerformed(evt);
            }
        });

        txtarea.setColumns(20);
        txtarea.setRows(5);
        jScrollPane2.setViewportView(txtarea);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setText("Inventory = ");

        inventorytxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inventorytxtActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setText("enter the cost of placing one order :");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel11.setText("enter the number of days you work");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel12.setText("enter the holding cost per drill per year :");

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel14.setText("enter the cost per lost sale :");

        placingoneorder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                placingoneorderActionPerformed(evt);
            }
        });

        drillperyear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drillperyearActionPerformed(evt);
            }
        });

        lostsale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lostsaleActionPerformed(evt);
            }
        });

        dayswork.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                daysworkActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(recorderpoint, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                                        .addComponent(simulated, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                                        .addComponent(startQuantity, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                                        .addComponent(quantitynumbers))
                                    .addComponent(randomnumberleadtime, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                                    .addComponent(randomnumber, javax.swing.GroupLayout.Alignment.LEADING)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel14))
                                .addGap(112, 112, 112)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lostsale)
                                    .addComponent(dayswork)
                                    .addComponent(drillperyear)
                                    .addComponent(placingoneorder, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(31, 31, 31)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 351, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(106, 106, 106))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(76, 76, 76))
                            .addComponent(inventorytxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(307, 307, 307))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(126, 126, 126)
                        .addComponent(randomnumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(randomnumberleadtime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(207, 207, 207))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(simulated, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(quantitynumbers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(startQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(recorderpoint, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel6)
                                .addGap(40, 40, 40)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel11)
                                    .addComponent(dayswork, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel9)
                                    .addComponent(placingoneorder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(drillperyear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(lostsale, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)))
                .addComponent(jButton1)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inventorytxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(42, 42, 42)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void simulatedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simulatedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_simulatedActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

                int[] demand = new int[50];
		int[] start = new int[50];
		int[] end = new int[50];
                
		for(int i = 0; i < firstTable.x; i++) 
                {
			demand[i] = (int)a[i][0];
			start[i] = (int)a[i][4];
			end[i] = (int)a[i][5];
		}
                
		float[][] inventory = new float[50][10];
		int j, s, m;
		float reorder, startquantity, orderquantity, count = 0.0f, startCounter = 0.0f;
		float sumEndingInv = 0.0f, sumLostSales = 0.0f, sumOrderPlaced = 0.0f;
		float avgEndingInv = 0, avgLostSales = 0, avgOrederPlaced = 0;
		//System.out.print("please enter the number of days you want to be simulated : ");
		j = Integer.parseInt(simulated.getText());
		//System.out.print("enter quantity number=");
		orderquantity = Integer.parseInt(quantitynumbers.getText());
		//System.out.print("enter the start quantity =");
		startquantity = Integer.parseInt(startQuantity.getText());
		//System.out.print("enter reorder point=");
		reorder = Integer.parseInt(recorderpoint.getText());
    
                for(s = 0; s < j; s++) {
			if(startCounter == 0) {
				startCounter = -1;
			}
                        if(startCounter > 0) {
				startCounter--;
			}
			inventory[s][0] = s + 1; //day
                        if(s == 0) {
                            inventory[s][1] = 0; //unit receive
				inventory[s][2] = startquantity; //beginning inventory/
			} else {
				if(startCounter == 0) {
					inventory[s][1] = orderquantity; //unit receive/
				} else {
					inventory[s][1] = 0; //count=0;/
				}
				inventory[s][2] = inventory[s - 1][5] + inventory[s][1];
			}
                
              //  System.out.print("enter a rondom number : ");
                    
                String Random = randomnumber.getText();
                String RandomsArray[] = Random.split(" ");
		
			inventory[s][3] = Float.valueOf(RandomsArray[s]);
                        
                        for(int i = 0; i < firstTable.x; i++) {
				if(start[i] <= inventory[s][3] && inventory[s][3] <= end[i]) {
					inventory[s][4] = demand[i]; //demand/
				}
			}
                        if(inventory[s][4] <= inventory[s][2]) {
				inventory[s][5] = inventory[s][2] - inventory[s][4];
				inventory[s][6] = 0; //lostSales/
			} else {
				inventory[s][5] = 0;
				inventory[s][6] = inventory[s][4] - inventory[s][2];
			}
                        
			if(inventory[s][5] <= reorder && startCounter < 0) {
			inventory[s][7] = 1;
		} else {
			inventory[s][7] = 0;
		}
                        if(inventory[s][7] == 1) {
			//System.out.print("enter the random number to lead time");
                            
                         String Randomleadtime = randomnumber.getText();
                         String RandomsleadtimeArray[] = Random.split(" ");
		
			 inventory[s][8]= Float.valueOf(RandomsleadtimeArray[s]);
                           
			for(int i = 0; i < secondtable.l; i++) {
				if(secondtable.lt[i][4] <= inventory[s][8] && inventory[s][8] <= secondtable.lt[i][5]) {
					inventory[s][9] = secondtable.lt[i][0];
				}
			}
                        System.out.printf("%f", inventory[s][9]);
                        inventorytxt.setText(inventory[s][9]+ " ");
			startCounter = inventory[s][9] + 1;
		} else {
			inventory[s][8] = 0;
			inventory[s][9] = 0;
		}
                        sumEndingInv = sumEndingInv + inventory[s][5];
		avgEndingInv = sumEndingInv / j;

		sumLostSales = sumLostSales + inventory[s][6];
		avgLostSales = sumLostSales / j;
                sumOrderPlaced = sumOrderPlaced + inventory[s][7];
		avgOrederPlaced = sumOrderPlaced / j;
    }
                //System.out.println("\n--------------------------- ENVENTORY TABLE ---------------------------------\n");
                //System.out.println("day   Recived  Biginnig\tRondom1\tDemand\tEnding   Lost  Order  Rondom2  LeadTime\n ");
                
                DefaultTableModel model = (DefaultTableModel) jTable3.getModel();
                Object [] data = new Object[10];

                 model.setRowCount(0);
           	
                 
		for( s = 0; s < j; s++) {	
                                 data[0] = inventory[s][0];
                                 data[1] = inventory[s][1] ;
                                 data[2] = inventory[s][2];
                                 data[3] = inventory[s][3];
                                 data[4] = inventory[s][4];
                                 data[5] = inventory[s][5];
                                 data[6] = inventory[s][6];
                                 data[7] = inventory[s][7] ;
                                 data[8] = inventory[s][8];
                                 data[9] = inventory[s][9];
                                 

                                 model.addRow(data);

               
                            
		}
               
               
                txtarea.append("the average ending inventory:  is "+ avgEndingInv);
                 txtarea.append("\n");
                 txtarea.append("the average lost sales is: "+ avgLostSales);
                 txtarea.append("\n");
		 txtarea.append("the average order placed is: "+ avgLostSales);
                 txtarea.append("\n");
                 
                
                
                int numOfDays;
		float orderingCost, holdingCost, lostSalesCost, cOneUnit;
		float dOrderCost, dHoldingCost, dStockOut, diNvCost;
		//System.out.print("enter the number of days you work of the year :");
		numOfDays = Integer.parseInt(dayswork.getText());
		//System.out.println();
		//System.out.print("enter the cost of placing one order :");
		orderingCost = Integer.parseInt(placingoneorder.getText());
		//System.out.println();
		//System.out.print("enter the holding cost per drill per year :");
		holdingCost = Integer.parseInt(drillperyear.getText());
		//System.out.println();
		//System.out.print("enter the cost per lost sale :");
		lostSalesCost = Integer.parseInt(lostsale.getText());
		//System.out.println();
		cOneUnit = holdingCost / numOfDays;
		dOrderCost = orderingCost * avgOrederPlaced;
		txtarea.append("the daily order cost is "+ dOrderCost);
		txtarea.append("\n");

		dHoldingCost = cOneUnit * avgEndingInv;
		txtarea.append("the daily holding cost is "+ dHoldingCost);
		txtarea.append("\n");

		dStockOut = lostSalesCost * avgLostSales;
		txtarea.append("the daily stockout cost is  "+ dStockOut);
                txtarea.append("\n");

		diNvCost = dOrderCost + dHoldingCost + dStockOut;
		txtarea.append("total daily inventory cost is "+diNvCost);
	        txtarea.append("\n");


    }//GEN-LAST:event_jButton1ActionPerformed

    private void quantitynumbersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantitynumbersActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quantitynumbersActionPerformed

    private void startQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startQuantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_startQuantityActionPerformed

    private void recorderpointActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recorderpointActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_recorderpointActionPerformed

    private void randomnumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_randomnumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_randomnumberActionPerformed

    private void randomnumberleadtimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_randomnumberleadtimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_randomnumberleadtimeActionPerformed

    private void inventorytxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inventorytxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inventorytxtActionPerformed

    private void placingoneorderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_placingoneorderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_placingoneorderActionPerformed

    private void drillperyearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drillperyearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_drillperyearActionPerformed

    private void lostsaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lostsaleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lostsaleActionPerformed

    private void daysworkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_daysworkActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_daysworkActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(thirdtable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(thirdtable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(thirdtable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(thirdtable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new thirdtable().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField dayswork;
    private javax.swing.JTextField drillperyear;
    private javax.swing.JTextField inventorytxt;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTextField lostsale;
    private javax.swing.JTextField placingoneorder;
    private javax.swing.JTextField quantitynumbers;
    private javax.swing.JTextField randomnumber;
    private javax.swing.JTextField randomnumberleadtime;
    private javax.swing.JTextField recorderpoint;
    private javax.swing.JTextField simulated;
    private javax.swing.JTextField startQuantity;
    private javax.swing.JTextArea txtarea;
    // End of variables declaration//GEN-END:variables
}
